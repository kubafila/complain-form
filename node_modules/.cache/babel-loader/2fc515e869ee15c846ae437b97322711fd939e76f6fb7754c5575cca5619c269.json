{"ast":null,"code":"var _jsxFileName = \"/home/kufijako/Pulpit/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport Name from \"./Components/Name\";\nimport Step from \"./Components/Step\";\nimport { useState } from \"react\";\nimport Phone from \"./Components/Phone\";\nimport Agree from \"./Components/Agree\";\nimport YouHaveToAgree from \"./Components/YouHaveToAgree\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const defaultFormState = {\n    currentStep: 0,\n    data: {\n      name: '',\n      phone: '',\n      agree1: false,\n      agree2: false\n    },\n    flow: ['hello', 'agree', 'phone']\n  };\n  const [formState, setFormState] = useState(defaultFormState);\n  const showOnlyFinalStep = (stepName, state, setState) => {\n    setState({\n      ...state,\n      currentStep: 0,\n      flow: [stepName]\n    });\n  };\n  const insertStepAsNext = (stepName, state, setState) => {\n    setState({});\n  };\n  const steps = [{\n    name: 'hello',\n    component: Name\n  }, {\n    name: 'phone',\n    component: Phone\n  }, {\n    name: 'youHaveToAgree',\n    component: YouHaveToAgree\n  }, {\n    name: 'agree',\n    component: Agree,\n    onSubmit: (state, setState) => showOnlyFinalStep('youHaveToAgree', state, setState)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"50px 100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Elo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Step, {\n      state: formState,\n      setState: setFormState,\n      steps: steps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ogr8/+38AWRAZOLGmQqZikNuQ7Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Name","Step","useState","Phone","Agree","YouHaveToAgree","jsxDEV","_jsxDEV","App","_s","defaultFormState","currentStep","data","name","phone","agree1","agree2","flow","formState","setFormState","showOnlyFinalStep","stepName","state","setState","insertStepAsNext","steps","component","onSubmit","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kufijako/Pulpit/my-app/src/App.js"],"sourcesContent":["import Name from \"./Components/Name\";\nimport Step from \"./Components/Step\";\nimport {useState} from \"react\";\nimport Phone from \"./Components/Phone\";\nimport Agree from \"./Components/Agree\";\nimport YouHaveToAgree from \"./Components/YouHaveToAgree\";\n\n\nfunction App() {\n\n\n    const defaultFormState = {\n\n        currentStep: 0,\n        data: {\n            name: '',\n            phone: '',\n            agree1: false,\n            agree2: false\n        },\n        flow: ['hello', 'agree','phone']\n    }\n\n\n\n    const [formState, setFormState] = useState(defaultFormState)\n\n    const showOnlyFinalStep = (stepName, state, setState) => {\n        setState({\n            ...state,\n            currentStep: 0,\n            flow: [stepName]\n        })\n    }\n\n    const insertStepAsNext = (stepName, state, setState) => {\n        setState({\n            \n        })\n    }\n    const steps = [\n        {\n            name: 'hello',\n            component: Name\n        },\n        {\n            name: 'phone',\n            component: Phone\n        },\n        {\n            name: 'youHaveToAgree',\n            component: YouHaveToAgree\n        },\n        {\n            name: 'agree',\n            component: Agree,\n            onSubmit: (state, setState) => showOnlyFinalStep('youHaveToAgree', state, setState)\n        },\n    ]\n\n    return (\n        <div className=\"App\" style={{padding: \"50px 100px\"}}>\n            <h1>Elo</h1>\n            <Step state={formState} setState={setFormState} steps={steps}/>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGX,MAAMC,gBAAgB,GAAG;IAErBC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAE;MACFC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,KAAK;MACbC,MAAM,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE,CAAC,OAAO,EAAE,OAAO,EAAC,OAAO;EACnC,CAAC;EAID,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACQ,gBAAgB,CAAC;EAE5D,MAAMU,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IACrDA,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRX,WAAW,EAAE,CAAC;MACdM,IAAI,EAAE,CAACI,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAACH,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IACpDA,QAAQ,CAAC,CAET,CAAC,CAAC;EACN,CAAC;EACD,MAAME,KAAK,GAAG,CACV;IACIZ,IAAI,EAAE,OAAO;IACba,SAAS,EAAE1B;EACf,CAAC,EACD;IACIa,IAAI,EAAE,OAAO;IACba,SAAS,EAAEvB;EACf,CAAC,EACD;IACIU,IAAI,EAAE,gBAAgB;IACtBa,SAAS,EAAErB;EACf,CAAC,EACD;IACIQ,IAAI,EAAE,OAAO;IACba,SAAS,EAAEtB,KAAK;IAChBuB,QAAQ,EAAEA,CAACL,KAAK,EAAEC,QAAQ,KAAKH,iBAAiB,CAAC,gBAAgB,EAAEE,KAAK,EAAEC,QAAQ;EACtF,CAAC,CACJ;EAED,oBACIhB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAACC,OAAO,EAAE;IAAY,CAAE;IAAAC,QAAA,gBAChDxB,OAAA;MAAAwB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZ5B,OAAA,CAACN,IAAI;MAACqB,KAAK,EAAEJ,SAAU;MAACK,QAAQ,EAAEJ,YAAa;MAACM,KAAK,EAAEA;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEd;AAAC1B,EAAA,CA1DQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}